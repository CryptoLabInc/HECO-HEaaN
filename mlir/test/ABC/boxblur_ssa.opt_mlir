builtin.module  {
  builtin.func private @encryptedBoxBlur(%arg0: tensor<16xi64>) -> tensor<16xi64> {
    %c4 = constant 4 : index
    %c0_i64 = constant 0 : i64
    %0 = affine.for %arg1 = 0 to 4 iter_args(%arg2 = %arg0) -> (tensor<16xi64>) {
      %1 = affine.for %arg3 = 0 to 4 iter_args(%arg4 = %arg2) -> (tensor<16xi64>) {
        %2 = muli %arg1, %c4 : index
        %3 = addi %2, %arg3 : index
        %4 = tensor.insert %c0_i64 into %arg4[%3] : tensor<16xi64>
        affine.yield %4 : tensor<16xi64>
      }
      affine.yield %1 : tensor<16xi64>
    }
    return %0 : tensor<16xi64>
  }
}

